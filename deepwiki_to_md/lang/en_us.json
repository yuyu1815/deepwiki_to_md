{
  "scraping_completed": "Scraping completed successfully. Markdown files saved to {output_dir}",
  "error": "Error: {error}",
  "scraper_description": "Scrape deepwiki and convert to Markdown.",
  "library_help": "Library name and URL to scrape. Can be specified multiple times.",
  "output_dir_help": "Output directory for Markdown files (default: {default})",
  "use_direct_scraper_help": "Use DirectDeepwikiScraper after dynamic page loading (default: True)",
  "no_direct_scraper_help": "Disable DirectDeepwikiScraper after dynamic page loading",

  "use_direct_md_scraper_help": "Use DirectMarkdownScraper to fetch Markdown directly (default: False)",
  "no_direct_md_scraper_help": "Disable DirectMarkdownScraper",
  "library_url_help": "URL of the library to scrape (alternative to --library)",
  "library_required_error": "Either a library URL or at least one library must be specified using --library",
  "direct_scraper_description": "Get and save Markdown directly from Deepwiki.",
  "direct_library_help": "Library name and URL to scrape. Can be specified multiple times.",
  "direct_output_dir_help": "Output directory for Markdown files (default: {default})",
  "save_html_help": "Save HTML as well (default: False)",
  "direct_library_url_help": "URL of the library to scrape (alternative to --library)",
  "direct_library_required_error": "Either a library URL or at least one library must be specified using --library",
  "scraping_result": "Scraping completed. {success_count} out of {total} libraries were successful.",
  "files_saved": "Markdown files saved to {output_dir}.",
  "directory_not_found": "Directory not found: {directory}",
  "found_md_files": "Found {count} markdown files to process",
  "processing_file": "Processing {file_path}",
  "modified_links": "Modified {count} links in {file_path}",
  "starting_fix": "Starting to fix markdown links in {directory}",
  "extracted_nav_items": "Number of extracted navigation items: {count}",
  "starting_library_scrape": "Starting to scrape library: {name} ({url})",
  "main_page_scrape_failed": "Failed to scrape main page: {url}",
  "html_fetch_failed": "Failed to fetch HTML: {url} (status code: {status_code})",
  "no_nav_items": "No navigation items found: {url}",
  "scraping_nav_item": "Scraping navigation item: {title} ({url})",
  "nav_item_scrape_failed": "Failed to scrape navigation item: {title} ({url})",
  "nav_extraction_error": "Error occurred while extracting navigation items: {error}",
  "getting_page_content": "Getting page content for URL: {url}",
  "using_direct_scraper": "Using DirectDeepwikiScraper for {url}",
  "direct_scraper_success": "DirectDeepwikiScraper successfully scraped {url} to {file_path}",
  "fetching_with_requests": "Fetching {url} with requests",
  "content_found_with_selector": "Content found with selector: {selector}",
  "navigation_menu_removed": "Navigation menu removed before Markdown conversion",
  "removed_first_lines": "Removed the first {count} lines from {filename}.md",
  "saved_file": "Saved {file_path}",
  "scraping_library": "Scraping library: {library_name}",
  "prioritizing_direct_md_scraper": "Prioritizing DirectMarkdownScraper for {url}",
  "direct_md_scraper_success": "Successfully scraped {url} and {count} pages using DirectMarkdownScraper",
  "failed_get_html": "Failed to get HTML content for {url}",
  "failed_extract_content": "Failed to extract main content for {url}",
  "failed_convert_html": "Failed to convert HTML to Markdown for {url}",
  "fixed_links": "Fixed links in {file_path}",

  "fixing_markdown_links": "Fixing markdown links in {directory}",
  "falling_back_to_standard": "Falling back to standard scraping method for {url}",
  "processing_title": "Processing: {title}",
  "accessing_url": "Accessing URL: {url}",
  "email_entered": "Email entered: {email}",
  "submit_button_clicked": "Submit button clicked",
  "email_info": "Email: {email}",
  "repo_request_sent": "Repository creation request sent",
  "repo_request_failed": "Failed to send repository creation request",
  "repo_creation_description": "Repository Creation Request",
  "repo_url_help": "URL of the repository creation page",
  "repo_email_help": "Email to notify",
  "headless_mode_help": "Enable headless mode",
  "success_message_wait_failed": "Failed to wait for success message.",
  "using_direct_md_scraper": "Using DirectMarkdownScraper for {url}",
  "using_html_to_md_scraper": "Using HTMLToMarkdownScraper for {url}",
  "using_direct_md_scraper_general": "Using DirectMarkdownScraper for scraping",
  "using_direct_scraper_general": "Using DirectDeepwikiScraper for scraping",
  "using_html_to_md_scraper_general": "Using HTMLToMarkdownScraper for scraping",
  "error_direct_md_scraper": "Error using DirectMarkdownScraper for {url}: {error}",
  "error_direct_scraper": "Error using DirectDeepwikiScraper for {url}: {error}",
  "error_html_to_md_scraper": "Error using HTMLToMarkdownScraper for {url}: {error}",
  "all_scraping_failed": "All scraping strategies failed for {url}",
  "found_nav_items": "Found {count} navigation items",
  "scraping_nav_item": "Scraping navigation item: {title} ({url})",
  "request_execution": "Executing request: {url}",
  "response_status": "Response status: {status_code}",
  "request_error": "Error occurred during request: {error}",
  "removed_proprietary_data": "Removed proprietary data from the end of the file: {bytes} bytes",
  "removed_first_lines": "Removed the first {count} lines from {filename}",
  "skip_duplicate_file": "Skipping save as a file with the same content has already been saved, but continuing processing: {filename}",
  "saved_file_path": "Saved: {file_path}",
  "scrape_page_url": "scrape_page: URL = {url}",
  "page_fetch_failed": "Failed to get the page: {url} (status code: {status_code})",
  "page_scrape_failed": "Failed to scrape the page: {url} ({error})",
  "navigation_element_not_found": "Navigation element not found",
  "scraping_start": "Starting scraping: {url}",
  "processing_complete": "Processing complete. Saved a total of {count} files.",
  "scraping_start_with_path": "Starting scraping: {url} (path: {path})",
  "debug_html_saved": "Saved HTML for debugging: {file}",
  "debug_headers_saved": "Saved headers for debugging: {file}",
  "html_length": "HTML length: {bytes} bytes",
  "html_title": "HTML title: {title}",
  "content_found_with_selector_direct": "Content found with selector: {selector}",
  "searching_max_text_content": "Content not found by selector, searching for maximum text content",
  "body_div_count": "Number of div elements directly under body: {count}",
  "using_max_text_div": "Using div with maximum text content (text length: {length})",
  "using_body_element": "Using body element (text length: {length})",
  "body_element_not_found": "Body element not found",
  "main_content_not_found": "Main content not found",
  "markdown_length": "Length after Markdown conversion: {bytes} bytes",
  "scrape_page_url_with_type": "scrape_page: URL = {url}, type = {type}",
  "scrape_page_parsed_url": "scrape_page: parsed_url = {parsed_url}",
  "scrape_page_url_parts": "scrape_page: scheme = {scheme}, netloc = {netloc}, path = {path}",
  "scrape_page_correct_url": "scrape_page: correct_url = {url}",
  "html_length_fetched": "Length of fetched HTML: {bytes} bytes",
  "content_extraction_failed": "Failed to extract content: {url}"
}
